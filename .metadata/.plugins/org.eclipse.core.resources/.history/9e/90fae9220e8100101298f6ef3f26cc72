package com.excelr.config;

import io.github.resilience4j.circuitbreaker.CircuitBreakerConfig;
import io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.time.Duration;

@Configuration
public class ResilienceConfig {

    @Bean
    public CircuitBreakerRegistry circuitBreakerRegistry() {
        CircuitBreakerConfig config = CircuitBreakerConfig.custom()
                .failureRateThreshold(50) // Percentage of failures to trigger open state
                .waitDurationInOpenState(Duration.ofMillis(10000)) // Wait time in open state
                .slidingWindowSize(5) // Number of calls to consider for failure rate
                .permittedNumberOfCallsInHalfOpenState(3) // Number of calls in half-open state
                .build();

        return CircuitBreakerRegistry.of(config);
    }
}